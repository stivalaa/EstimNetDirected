#!/bin/sh
#
# File:    estimnetdirectedEstimation2simulationConfig.sh
# Author:  Alex Stivala
# Created: November 2019
#
#
# Read output of computeEstimNetDirectedCovariance.R with the estimate
# computed from EstimNetDirected results
# and build config script for SimulateERGM to simulate networks from
# the estimated parmeter values. Also needs to parse some filenames
# from the configuration file used for the estimation, to get arc list
# file (for number of nodes), output file names (obseved network statistics)
# etc.
# 
# Usage: estimnetdirectedEstimation2simulationConfig.sh estimation_config_file estimationoutputfile statsoutputfile simNetFilePrefix
#
#  estmiation_config_file is the config file that generated the
#      estimationoutputfile
#  statsoutputfile is the file to write the simulated network stats to
#    (this is written in the output config file)
#  simNetFilePrefix is prefix for simulated Pajek .net files
#    (this is written in the output config file)
#
# E.g.:
#   estimnetdirectedEstimation2simulationConfig.sh config_example.txt estimation.out stats_estimation.out gof_estimation
#
# Output is to stdout
#
# Uses various GNU utils options on echo, etc.



if [ $# -ne 4 ]; then
    echo "usage: $0 estimation_config.txt estimation.out statsoutputfilename simNetFilePrefix" >&2
    exit 1
fi

estimationconfig=$1
estimationresults=$2
statsFile=$3
simNetFilePrefix=$4

estimnet_tmpfile=`mktemp`
estimnet_tmpfile2=`mktemp`


echo "# Generated by: $0 $*"
echo "# At: " `date`
echo "# On: " `uname -a`

arclistFile=`grep -v '^#' ${estimationconfig} | grep -i arclistFile | awk -F= '{print $2}'`
observedStatsFilePrefix=`grep -i observedStatsFilePrefix ${estimationconfig} | awk -F= '{print $2}'`

is_cergm=0
grep -q -i -E "citationERGM\s*=\s*True" ${estimationconfig}
if [ $? -eq 0 ]; then
   is_cergm=1
fi
if [ $is_cergm -eq 1 ]; then
  echo "citationERGM = True"
  grep -i termfile ${estimationconfig}
  echo "arclistFile = ${arclistFile}"
else
  echo "# arclistFile = ${arclistFile}"
fi
echo "# observedStatsFilePrefix = ${observedStatsFilePrefix}"

numNodes=`cat ${arclistFile} | grep -i '^*Vertices'| awk '{print $2}'`
echo "numNodes = ${numNodes}"

# for bipartite graphs have *Vertices numNodes numNodesA
numNodesA=`cat ${arclistFile} | grep -i '^*Vertices'| awk '{print $3}'`
if [ ! -z ${numNodesA} ]; then
  echo "numNodesA = ${numNodesA}"
fi



cat <<EOF
useTNTsampler = True # use the tie-no-tie sampler
sampleSize = 100 #number of network samples to take from simulation
interval = 100000 # interval (iterations) between samples
burnin = 1000000 # number of iterations to throw away before first sample
outputSimulatedNetworks = True
EOF

# we need the attribute files, directly from the esetimation config file
grep -i binattrFile ${estimationconfig}
grep -i catattrFile ${estimationconfig}
grep -i contattrFile ${estimationconfig}
grep -i setattrFile ${estimationconfig}

# options that need to be same in simulation as estimation
grep -wi isbipartite ${estimationconfig}
grep -wi isdirected ${estimationconfig}
grep -wi forbidreciprocity ${estimationconfig}
grep -wi allowloops ${estimationconfig}

echo "# Filename of file to write statistics to"
echo "statsFile = ${statsFile}"
echo "# Prefix of simulated networks in Pajek .net file format"
echo "simNetFilePrefix = ${simNetFilePrefix}"

# new version has results starting at line following "Pooled" at start
# of line (pooling the individual run estimates values printed earlier) and
# 5 columns:
# Effect   estimate   sd(theta)   est.std.err  t.ratio
# (and maybe *) plus
# TotalRuns and ConvergedRuns e.g.:
#Diff_completion_percentage -0.002270358 0.005812427 0.01295886 0.021386
#TotalRuns 2
#ConvergedRuns 2
# (see computeEstimNetDirectedCovariance.R)
# https://unix.stackexchange.com/questions/78472/print-lines-between-start-and-end-using-sed
cat ${estimationresults} | sed -n -e '/^Pooled/,/^TotalRuns/{//!p}'  | tr -d '*' | fgrep -vw AcceptanceRate | fgrep -vw TotalRuns | fgrep -vw ConvergedRuns | awk '{print $1,$2,$4,$5}'  |  tr ' ' '\t' >> ${estimnet_tmpfile}

effectlist=`cat ${estimnet_tmpfile} |  awk '{print $1}' | sort | uniq`

for effect in ${effectlist}
do
  estimnet_point=`grep -w ${effect} ${estimnet_tmpfile} | awk '{print $2}'`
  echo $effect = $estimnet_point
done > ${estimnet_tmpfile2}

# Note this separation of the structural from attribute effects
# depends on assuming that only the attribute effects have an underscore
# in the names  (separating the parameter from the attribute name) so
# will break if any of the attributes have an underscore in them... 

echo 'structParams = {'
# Note alternating stats like AltKTrianglesT(2.1) are transformed by R into
# e.g. AltKTRianglesT.2.1. (replace parens with period) so have to 
# chagne them back here
cat ${estimnet_tmpfile2} | fgrep -v _ | sed 's/$/,/' | tr -d '\n' | sed 's/,$/}/' | sed 's/,/,\n/g' | sed 's/Alt\([a-zA-Z0-9]*\)[.]\([0-9.]*\)[.]/Alt\1(\2)/g'
echo
echo
# only do attrParams if any in estimation
fgrep -q _ ${estimnet_tmpfile2}
if [ $? -eq 0 ]; then
  echo 'attrParams = {'
  # convert e.g. "MatchingReciprocity_value = -1.712176"
  # to "MatchingReciprocity(value = -1.712176)"
  # Do not do attribute interaction parameters (just check for Interaction
  # in name)
  # Note attribute exponent parameters (e.g. BipartiteNodeMatchAlphaA) 
  # are transformed by R from e.g. BipartiteNodeMAtchAlphaA_catattrA(1) to
  # BipartiteNodeMatchAlphaA_catattrA.1. (replace parens with period) so
  # have to change them back here
  cat ${estimnet_tmpfile2} | grep -vi '[a-z]\+interaction' | fgrep _ | sed 's/\([a-zA-Z]*\)_\([a-zA-Z0-9.]*\) = \([0-9.e-]*\)/\1(\2 = \3)/g' | sed 's/$/,/' | tr -d '\n' | sed 's/,$/}/' | sed 's/,/,\n/g' | sed 's/\([a-zA-Z0-9]*\)Alpha\([AB]\)[(]\([a-zA-Z0-9]*\)[.]\([0-9.]*\)[.] = \([0-9.e-]*\)[)]/\1Alpha\2(\3, \4 = \5)/g' | sed 's/\([a-zA-Z0-9]*\)Beta\([AB]\)[(]\([a-zA-Z0-9]*\)[.]\([0-9.]*\)[.] = \([0-9.e-]*\)[)]/\1Beta\2(\3, \4 = \5)/g'
  echo

  grep -qi '[a-z]\+interaction' ${estimnet_tmpfile2}
  if [ $? -eq 0 ]; then
    echo 'attrInteractionParams = {'
    # Attribute interaction parameters
    # convert e.g.
    #  "BinaryPairInteraction_gender.Female_industry.Personal.Goods = 0.1136838"
    # to "BinaryPairInteraction(gender.Female, industry.Personal.Goods = 0.1136838)"
    cat ${estimnet_tmpfile2} | grep -i '[a-z]\+interaction' | fgrep _ | sed 's/\([a-zA-Z]*\)_\([a-zA-Z0-9.]*\)_\([a-zA-Z0-9.]*\) = \([0-9.e-]*\)/\1(\2, \3 = \4)/g' | sed 's/$/,/' | tr -d '\n' | sed 's/,$/}/' 
  fi
fi

rm ${estimnet_tmpfile} ${estimnet_tmpfile2}
