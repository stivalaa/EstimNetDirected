#!/bin/bash
#
# File:    estimnetdirectedEstimation2textableSingleModel.sh
# Author:  Alex Stivala
# Created: March 2019
#
#
# Read output of computeEstimNetDirectedCovariance.R with the estimate,
# estimated std. error and t-ratio computed from EstimNetDirected results
# and build LaTeX table for one model (not using underset etc. for CI, 
# simpler format)
# 
# Usage: estimnetdirectedEstimation2textableSingleModel.sh estimationoutputfile
#
# E.g.:
#   estimnetdirectedEstimation2textableSingleModel.sh  estimation.out
#
# Output is to stdout
#
# Uses various GNU utils options on echo, etc.


zSigma=2 # multiplier of estimated standard error for nominal 95% C.I.
tratioThreshold=0.3 # t-ratio must be <= this for significance

if [ $# -ne 1 ]; then
    echo "usage: $0 estimation.out" >&2
    exit 1
fi

estimationresults=$1

estimnet_tmpfile=`mktemp`

echo "% Generated by: $0 $*"
echo "% At: " `date`
echo "% On: " `uname -a`

echo  '\begin{tabular}{lrrrc}'
# echo '\toprule'
echo '\hline'
echo 'Effect & Estimate & Std. error & t-ratio & \\'
echo '\hline'
#echo '\midrule'

# new version has results starting at line following "Pooled" at start
# of line (pooling the individual run estimates values printed earlier) and
# 5 columns:
# Effect   estimate   sd(theta)   est.std.err  t.ratio
# (and maybe *) plus
# TotalRuns and ConvergedRuns e.g.:
#Diff_completion_percentage -0.002270358 0.005812427 0.01295886 0.021386
#TotalRuns 2
#ConvergedRuns 2
# (see computeEstimNetDirectedCovariance.R)
# https://unix.stackexchange.com/questions/78472/print-lines-between-start-and-end-using-sed
cat ${estimationresults} | sed -n -e '/^Pooled/,/^TotalRuns/{//!p}'  | tr -d '*' | fgrep -vw AcceptanceRate | fgrep -vw TotalRuns | fgrep -vw ConvergedRuns | awk '{print $1,$2,$4,$5}'  |  tr ' ' '\t' >> ${estimnet_tmpfile}

effectlist=`cat ${estimnet_tmpfile} |  awk '{print $1}' | sort | uniq`

for effect in ${effectlist}
do
  echo -n "${effect} " | tr '_' ' '
  estimnet_point=`grep -w ${effect} ${estimnet_tmpfile} | awk '{print $2}'`
  estimnet_stderr=`grep -w ${effect} ${estimnet_tmpfile} | awk '{print $3}'`
  estimnet_tratio=`grep -w ${effect} ${estimnet_tmpfile} | awk '{print $4}'`
  if [ "${estimnet_point}" = "" ];  then
      echo -n " & ---"
  else 
      # bc cannot handle scientific notation so use sed to convert it 
      estimnet_lower=`echo "${estimnet_point} - ${zSigma} * ${estimnet_stderr}" | sed -e 's/[eE]+*/*10^/' | bc -l`
      estimnet_upper=`echo "${estimnet_point} + ${zSigma} * ${estimnet_stderr}" | sed -e 's/[eE]+*/*10^/' | bc -l`
      estimnet_point=`echo "${estimnet_point}" | sed -e 's/[eE]+*/*10^/'`
      estimnet_tratio=`echo "${estimnet_tratio}" | sed -e 's/[eE]+*/*10^/'`
      estimnet_stderr=`echo "${estimnet_stderr}" | sed -e 's/[eE]+*/*10^/'`
      echo AAA "${estimnet_point}">&2
      abs_estimate=`echo "if (${estimnet_point} < 0) -(${estimnet_point}) else ${estimnet_point}" | bc -l`
      abs_tratio=`echo "if (${estimnet_tratio} < 0) -(${estimnet_tratio}) else ${estimnet_tratio}" | bc -l`
      echo YYY ${abs_estimate} >&2
      echo QQQ ${abs_tratio} >&2
      echo XXX "${abs_tratio} <= ${tratioThreshold} && ${abs_estimate} > ${zSigma} * ${estimnet_stderr}" >&2
      signif=`echo "${abs_tratio} <= ${tratioThreshold} && ${abs_estimate} > ${zSigma} * ${estimnet_stderr}" | bc -l`
      echo ZZZ ${signif} >&2
      printf ' & %.3f & %.3f & %.3f & ' ${estimnet_point} ${estimnet_stderr} ${estimnet_tratio}
      if [ ${signif} -ne 0 ]; then
	  echo -n '*'
      fi
  fi
  echo '\\'
done

echo '\hline'
#echo '\bottomrule'
echo '\end{tabular}'

rm ${estimnet_tmpfile}
