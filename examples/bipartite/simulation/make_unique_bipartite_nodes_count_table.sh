#!/bin/sh
##
## File:    make_unique_bipartite_nodes_count_table.sh
## Author:  Alex Stivala
## Created: April 2025
##
## Run the R script to count unique A and B nodes in four-cycles
## in simulated networks and write space delimited table of the counts
## for reading into R with read.table() to stdout.
##
## The CYPATH directory containing cypath executable and Perl scripts
## (transgrh.pl etc.) must be in the PATH as this R script uses
## system2() to call them in order to find (not just count)
## four-cycles. Have to edit the transgrh.pl script to add a
## semicolon on the end of line 38 as it does not work otherwise.
##
## For CYPATH see:
##
##    http://research.nii.ac.jp/~uno/code/cypath.html
##    http://research.nii.ac.jp/~uno/code/cypath11.zip
## 
##    Uno, T., & Satoh, H. (2014, October). An efficient algorithm for
##    enumerating chordless cycles and chordless paths. In International
##    Conference on Discovery Science (pp. 313-324). Springer, Cham.
##
##

CYPATH_DIR=${DOCUMENTS}/USI/CYPATH
export PATH=${PATH}:${CYPATH_DIR}

ESTIMNETDIRECTED_SCRIPTS_DIR=../../../scripts


echo "# Generated by: $0 $*"
echo "# At: " `date`
echo "# On: " `uname -a`

echo 'Aparam Bparam numnodesA numnodesB FourCycles uniqueFourCyclesA uniqueFourCyclesB'
for Aparam in positive negative zero
do
    for Bparam in positive negative zero
    do
        for network in simulation_sim_bipartite_asymmetric_FourCyclesNodePower_A${Aparam}_B${Bparam}*.net
        do
            time Rscript  ${ESTIMNETDIRECTED_SCRIPTS_DIR}/count_unique_bipartite_nodes_in_fourcycles.R ${network} | while read line
            do
                if [ $(expr "${line}" : '^Number of A nodes[:] [0-9]*') -gt 0 ]; then
                    num_A_nodes=$(echo "${line}" | awk '{print $NF}')
                fi
                if [ $(expr "${line}" : '^Number of B nodes[:] [0-9]*') -gt 0 ]; then
                    num_B_nodes=$(echo "${line}" | awk '{print $NF}')
                fi
                if [ $(expr "${line}" : '^Number of four[-]cycles[:] [0-9]*') -gt 0 ]; then
                    num_4cycles=$(echo "${line}" | awk '{print $NF}')
                fi
                if [ $(expr "${line}" : '^Unique A nodes in four[-]cycles[:] [0-9]*') -gt 0 ]; then
                    unique_A_4cycles=$(echo "${line}" | awk '{print $NF}')
                fi
                if [ $(expr "${line}" : '^Unique B nodes in four[-]cycles[:] [0-9]*') -gt 0 ]; then
                    unique_B_4cycles=$(echo "${line}" | awk '{print $NF}')
                    Aparam=$(echo ${Aparam} | sed 's/negative/neg/;s/positive/pos/')
                    Bparam=$(echo ${Bparam} | sed 's/negative/neg/;s/positive/pos/')
                    echo ${Aparam} ${Bparam} ${num_A_nodes} ${num_B_nodes} ${num_4cycles} ${unique_A_4cycles} ${unique_B_4cycles}
                fi
            done
        done
    done
done
