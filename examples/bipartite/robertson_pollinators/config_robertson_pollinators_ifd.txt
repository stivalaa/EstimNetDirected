# vim:ft=config
##############################################################################
#
# example setting file for EstimNetDirected
#
#  note parameter and attribute names are not case sensitive (but filenames are)
#

isBipartite = True # two-mode network
isDirected = False # undirected network

################## Algorithm constants #######################################

useBorisenkoUpdate = True # use the Borisenko et al. (2019) update algorithm

useIFDsampler = True


samplerSteps= 1000 # sampler iterations (per algorithm step)
 
Ssteps =100 # steps of Algorithm S 


EEsteps= 1500 # steps of Algorithm EE. 
EEinnerSteps = 100 # inner iterations of Algorithm EE 


outputSimulatedNetwork = True  # write the simulated network to file

computeStats = True # compute observed sufficient statistics

################## Input filenames ###########################################


# Network in Pajek arc list format. In the Pajek format *vertices at
# top, then followed by one line for each vertex (just vertex number)
# [note this part is optional for EstimeNetDirected] then *edges
# followed by edges list one per line.

arclistFile = ../../../Test/TestChangeStatsBipartite/robertson_pollinators_bipartite.net

# Attribute files
# binattr_file for binary attributes (0 or 1 only)
# catattr_file for categorical attributes (any integer)
# The format of the file is a header line with whitespace
# delimited attribute names, and each subsequent line
# the attribute values for each attribute.
# The first line (after the header) has the values for
# node 0, then the next line node 1, and so on.
# 
# E.g.:
#
# gender class
# 0      1
# 1      2
# 1      3

#binattrFile = 

################## Output filenames ##########################################

#
# Output filenames are constructed from the prefix specified here,
# with _<rank>.txt added, where <rank> is the MPI rank (task number).
# So e.g. if thetaFilePrefix = theta then the output files are theta_0.txt etc.
#

# Theta (estimated parameter) values output file prefix

thetaFilePrefix = theta_ifd_robertson_pollinators

# dzA (statistics deltas, which should osciallate about zero at equilibrium)
# values output file prefix 

dzAFilePrefix = dzA_ifd_robertson_pollinators

# Pajek .net file prefix for simulatd network at the end of the EE MCMC process.

simNetFilePrefix = sim_ifd_robertson_pollinators


# prefix for observed network statistics

observedStatsFilePrefix = obs_stats_ifd_robertson_pollinators


################## Parameters to estimate ####################################

#
# Structural parameters
#

# There are no mode B isolates

## Does not converge:
structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltK4CyclesA(10.0) }

## Does not converge:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltK4CyclesB(10.0) }

## Does not converge:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltK4CyclesA(5.0) }

## GoF simulation shows this is not really a converged model:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltK4CyclesB(5.0) }

## GoF simulation shows this is not really a converged model:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltK4CyclesB(2.0) }

## GoF simulation shows this is not really a converged model:
##structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(4.0),  BipartiteAltKCyclesA(2.0), BipartiteAltKCyclesB(4.0), BipartiteAltK4CyclesA(2.0), BipartiteAltK4CyclesB(4.0)}

##Does not converge:
#structParams =  { Edge, Isolates, BipartiteAltStarsA(5.0), BipartiteAltStarsB(5.0), BipartiteAltKCyclesA(5.0), BipartiteAltKCyclesB(5.0)}

## Very slow (31 hours estimation) and GoF simulation shows not converged:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(5.0), BipartiteAltStarsB(5.0), BipartiteFourCyclesNodePowerA(5), BipartiteFourCyclesNodePowerB(5) }

## Very slow (31 hours estimation) and GoF simulation shows not converged:
#structParams =  { Edge, BipartiteAltStarsA(2.0), BipartiteAltStarsB(5.0), BipartiteFourCyclesNodePowerA(5), BipartiteFourCyclesNodePowerB(5) }

## GoF sim bad, estim. diagnostic sim plot shows bad mode A degree fit
## and dzA plot not good on BipartiteAltStarsB(5):
#structParams =  { Edge,  BipartiteAltStarsA(2.0), BipartiteAltStarsB(5.0) }

## does not converge:
#structParams =  { Edge,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(2.0) }

## GoF sim bad, estim. diagnostic sim plot shows bad mode A degree fit
## and dzA plot not good on BipartiteAltStarsB(5):
#structParams =  { Edge,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(5.0) }

## GoF sim bad, but estim. diagnostic sim plot shows better mode A degree fit
## than without BipartieIsolatesA, but bad fit on dsp;
## and dzA plot very bad on BipartiteAltStarsB(5):
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(5.0) }

## does not converge:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(2.0) }

## estim. diagnostic plots better (except dsp); sim gof converges (after 
## increasing interval); sim gof ok on degrees, geodesic, giant component,
## bad on dsp and four-cycles:
## [this model is OK but no four-cycles parameters so bad fit on those]
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0) }

## bad sim gof on BipartiteAltKCyclesA(2) and BipartiteAltStarsB(10):
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesA(2.0) }

## bad sim gof on BipartiteAltKCyclesA(10) (converges to lower than obs):
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesA(10.0) }

## does not converge:
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesB(10.0) }

## estim.diagnostic sim plot showing likely not converged (very high variance)
## and theta plot shows BipartiteAltStarsA.10 not converegd;
## and dzA plot bad on BipartieAltStarsB.10; gof sim bad
##structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesB(2.0) }

## estim.diagnostic sim plot showing likely not converged (very high variance)
## and theta plot shows BipartiteAltStarsA.10 (and all oters) not converegd;
## and dzA plot bad on BipartieAltStarsB.10 and BipartitIsolatesA; gof sim bad
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesB(5.0) }

## estim.diagnostic sim plot showing likely not converged (very high variance)
## and theta plot shows BipartiteAltStarsA.10 (and all oters) not converegd;
## and dzA plot bad on BipartieAltStarsB.10 and BipartitIsolatesA; gof sim bad
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesB(5.0), BipartiteAltKCyclesA(5) }

## estim.diagnostic sim plot showing likely not converged (very high variance)
## and theta plot shows BipartiteAltStarsA.10 (and all oters) not converegd;
## and dzA plot bad on BipartieAltStarsB.10 and BipartitIsolatesA; gof sim bad
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteAltKCyclesB(10.0), BipartiteAltKCyclesA(10) }

## estim. diagnostic plots OK (although theta very noisy) but gof sim plot
## shows not converged BipartiteAltStarsA(10) and BipartiteIsolatesA OK but
## BipartiteAltStarsB(10) and both four-cycles-node-power significantly 
## higher observed than simulated
## (Note all estimations with BipartiteFourCyclesNodePowerA/B are very slow,
## i.e. take 31 hours instead of under 10 minutes wihtout them)
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteFourCyclesNodePowerA(2), BipartiteFourCyclesNodePowerB(2) }

## estimation diagnostis (including sim pseudo-gof) good, but
## gof sim shows obs outside 95% CI for StarsA and Fourcycles A and B.
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteFourCyclesNodePowerA(10), BipartiteFourCyclesNodePowerB(10) }

## estimation diagnostics (including sim pseudo-gof) OK, but
## gof sim shows obs outside 95% CI for StarsA and Fourcycles A and B and IsolatesA
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteFourCyclesNodePowerA(20), BipartiteFourCyclesNodePowerB(20) }

## estimation diagnostics good (but mode A not great on pseudo-gof, and
## dsp and four=cycles very bad on pseudo-gof) and sim gof good (could use
## more burnin though), but sim gof bad on dsp and four-cycles:
## [This model is OK but only four-cycles for mode A so fit not good]
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteFourCyclesNodePowerA(10) }

## estimation diagnosics good but sim gof bad on all (except edge): sim
## does not converge to obs value but above (StarsA.10, IsolateA)
## or below (StarsB.10) it.
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteFourCyclesNodePowerB(10) }

## estimation diagnosics good but sim gof bad on all (except edge, StarsB.10 OK)## sim does not converge to obs value but above (StarsA.10, IsolateA)
## or below (FourCyclesNodePowerB.20) it.
#structParams =  { Edge, BipartiteIsolatesA,  BipartiteAltStarsA(10.0), BipartiteAltStarsB(10.0), BipartiteFourCyclesNodePowerB(20) }



#
# Attribute parameters
#

#attrParams = {Matching(value), MatchingReciprocity(value)}


